const j=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const n of r)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function e(r){const n={};return r.integrity&&(n.integrity=r.integrity),r.referrerpolicy&&(n.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?n.credentials="include":r.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(r){if(r.ep)return;r.ep=!0;const n=e(r);fetch(r.href,n)}};j();const z=class{constructor(i=0,t=0,e=0,s=1){this.r=i,this.g=t,this.b=e,this.a=s}set(i,t,e,s){this.r=i,this.g=t,this.b=e,this.a=s}copy(i){this.r=i.r,this.g=i.g,this.b=i.b,this.a=i.a}};let b=z;b.WHITE=new z(1,1,1);b.BLACK=new z(0,0,0);b.RED=new z(1,0,0);b.GREEN=new z(0,1,0);b.BLUE=new z(0,0,1);b.YELLOW=new z(1,1,0);b.PURPLE=new z(1,0,1);b.CYAN=new z(0,1,1);class H{constructor(t=0,e=0){this.x=t,this.y=e}}class N{static degreesToRadians(t){return t*Math.PI/180}static radiansToDegrees(t){return t*180/Math.PI}static rescale(t,e,s,r,n){return r+(n-r)*(t-e)/(s-e)}static clamp(t,e,s){return Math.max(e,Math.min(s,t))}}class X{constructor(){this.canvas=document.getElementById("gfxCanvas"),this.canvas||alert("Unable to find gfxCanvas.");const t=this.canvas.getContext("webgl2");t||alert("Unable to initialize WebGL. Your browser or machine may not support it."),this.gl=t,this.gl.enable(this.gl.DEPTH_TEST),this.gl.depthFunc(this.gl.LESS),this.gl.enable(t.CULL_FACE),this.gl.cullFace(t.BACK),this.background=new b}resize(t,e,s){this.canvas.width=t,this.canvas.height=e,s>window.innerWidth/window.innerHeight?this.gl.viewport(0,(window.innerHeight-window.innerWidth/s)/2,window.innerWidth,window.innerWidth/s):this.gl.viewport((window.innerWidth-window.innerHeight*s)/2,0,window.innerHeight*s,window.innerHeight)}render(t,e){this.gl.clearColor(this.background.r,this.background.g,this.background.b,this.background.a),this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),t.draw(e)}getNormalizedDeviceCoordinates(t,e){const s=this.gl.getParameter(this.gl.VIEWPORT);return new H(N.clamp((t-s[0])/s[2]*2-1,-1,1),N.clamp((e-s[1])/s[3]*-2+1,-1,1))}}const c=class{static copy(i){return new c(i.x,i.y,i.z)}static inverse(i){return new c(-i.x,-i.y,-i.z)}static add(i,t){return new c(i.x+t.x,i.y+t.y,i.z+t.z)}static subtract(i,t){return new c(i.x-t.x,i.y-t.y,i.z-t.z)}static multiply(i,t){return new c(i.x*t.x,i.y*t.y,i.z*t.z)}static divide(i,t){return new c(i.x/t.x,i.y/t.y,i.z/t.z)}static dot(i,t){return i.x*t.x+i.y*t.y+i.z*t.z}static cross(i,t){return new c(i.y*t.z-i.z*t.y,i.z*t.x-i.x*t.z,i.x*t.y-i.y*t.x)}static multiplyScalar(i,t){return new c(i.x*t,i.y*t,i.z*t)}static divideScalar(i,t){return new c(i.x/t,i.y/t,i.z/t)}static normalize(i){const t=i.x*i.x+i.y*i.y+i.z*i.z;if(t<1e-8)return new c;const e=1/Math.sqrt(t);return new c(i.x*e,i.y*e,i.z*e)}static angleBetween(i,t){return i.angleBetween(t)}constructor(i=0,t=0,e=0){this.x=i,this.y=t,this.z=e}set(i,t,e){this.x=i,this.y=t,this.z=e}copy(i){this.x=i.x,this.y=i.y,this.z=i.z}clone(){return new c(this.x,this.y,this.z)}equals(i){return this.x==i.x&&this.y==i.y&&this.z==i.z}add(i){this.x+=i.x,this.y+=i.y,this.z+=i.z}subtract(i){this.x-=i.x,this.y-=i.y,this.z-=i.z}multiply(i){this.x*=i.x,this.y*=i.y,this.z*=i.z}divide(i){this.x/=i.x,this.y/=i.y,this.z/=i.z}dot(i){return this.x*i.x+this.y*i.y+this.z*i.z}cross(i){return new c(this.y*i.z-this.z*i.y,this.z*i.x-this.x*i.z,this.x*i.y-this.y*i.x)}multiplyScalar(i){this.x*=i,this.y*=i,this.z*=i}divideScalar(i){this.x/=i,this.y/=i,this.z/=i}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}normalize(){const i=this.x*this.x+this.y*this.y+this.z*this.z;if(i<1e-8)return;const t=1/Math.sqrt(i);this.x*=t,this.y*=t,this.z*=t}invert(){this.x=-this.x,this.y=-this.y,this.z=-this.z}inverse(){return new c(-this.x,-this.y,-this.z)}applyMatrix(i){const t=this.clone(),e=1/(i.mat[3]*t.x+i.mat[7]*t.y+i.mat[11]*t.z+i.mat[15]);this.x=e*(i.mat[0]*t.x+i.mat[4]*t.y+i.mat[8]*t.z+i.mat[12]),this.y=e*(i.mat[1]*t.x+i.mat[5]*t.y+i.mat[9]*t.z+i.mat[13]),this.z=e*(i.mat[2]*t.x+i.mat[6]*t.y+i.mat[10]*t.z+i.mat[14])}rotate(i){this.copy(i.rotate(this))}angleBetween(i){const t=c.normalize(this),e=c.normalize(i);return Math.acos(t.dot(e))}distanceTo(i){return Math.sqrt((this.x-i.x)*(this.x-i.x)+(this.y-i.y)*(this.y-i.y)+(this.z-i.z)*(this.z-i.z))}setPositionFromMatrix(i){this.x=i.mat[12],this.y=i.mat[13],this.z=i.mat[14]}};let a=c;a.ZERO=new c(0,0,0);a.ONE=new c(1,1,1);a.UP=new c(0,1,0);a.DOWN=new c(0,-1,0);a.LEFT=new c(-1,0,0);a.RIGHT=new c(1,0,0);a.FORWARD=new c(0,0,-1);a.BACK=new c(0,0,1);a.X_AXIS=c.RIGHT;a.Y_AXIS=c.UP;a.Z_AXIS=c.FORWARD;const A=class{static multiply(i,t){const e=new A;return e.w=i.w*t.w-i.x*t.x-i.y*t.y-i.z*t.z,e.x=i.w*t.x+i.x*t.w+i.y*t.z-i.z*t.y,e.y=i.w*t.y+i.y*t.w+i.z*t.x-i.x*t.z,e.z=i.w*t.z+i.z*t.w+i.x*t.y-i.y*t.x,e}static normalize(i){const t=i.clone();return t.normalize(),t}static inverse(i){const t=i.clone();return t.invert(),t}static makeRotationX(i){const t=new A;return t.setRotationX(i),t}static makeRotationY(i){const t=new A;return t.setRotationY(i),t}static makeRotationZ(i){const t=new A;return t.setRotationZ(i),t}static makeAxisAngle(i,t){const e=new A;return e.setAxisAngle(i,t),e}static makeEulerAngles(i,t,e){const s=new A;return s.setEulerAngles(i,t,e),s}static makeMatrix(i){const t=new A;return t.setMatrix(i),t}constructor(i=0,t=0,e=0,s=1){this.x=i,this.y=t,this.z=e,this.w=s}set(i,t,e,s){this.x=i,this.y=t,this.z=e,this.w=s}setRotationX(i){this.w=Math.cos(i/2),this.x=Math.sin(i/2),this.y=0,this.z=0}setRotationY(i){this.w=Math.cos(i/2),this.x=0,this.y=Math.sin(i/2),this.z=0}setRotationZ(i){this.w=Math.cos(i/2),this.x=0,this.y=0,this.z=Math.sin(i/2)}setAxisAngle(i,t){const e=Math.sin(t/2);this.w=Math.cos(t/2),this.x=e*i.x,this.y=e*i.y,this.z=e*i.z}setEulerAngles(i,t,e){const s=Math.cos(t/2),r=Math.sin(t/2),n=Math.cos(i/2),o=Math.sin(i/2),l=Math.cos(-e/2),m=Math.sin(-e/2);this.x=r*n*l+s*o*m,this.y=s*o*l-r*n*m,this.z=s*n*m+r*o*l,this.w=s*n*l-r*o*m}setMatrix(i){this.w=Math.sqrt(1+i.mat[0]+i.mat[5]+i.mat[10])/2,this.x=(i.mat[6]-i.mat[9])/(4*this.w),this.y=(i.mat[8]-i.mat[2])/(4*this.w),this.z=(i.mat[1]-i.mat[4])/(4*this.w)}copy(i){this.x=i.x,this.y=i.y,this.z=i.z,this.w=i.w}clone(){return new A(this.x,this.y,this.z,this.w)}multiply(i){this.copy(A.multiply(i,this))}normalize(){const i=1/Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);this.x*=i,this.y*=i,this.z*=i,this.w*=i}rotate(i){const t=new a(this.x,this.y,this.z),e=a.multiplyScalar(t,2*t.dot(i));e.add(a.multiplyScalar(i,this.w*this.w-t.dot(t)));const s=t.cross(i);return s.multiplyScalar(2*this.w),e.add(s),e}invert(){const i=1/(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);this.x*=-i,this.y*=-i,this.z*=-i,this.w*=i}inverse(){return A.inverse(this)}getMatrix(){const i=this.w*this.w,t=this.x*this.x,e=this.y*this.y,s=this.z*this.z,r=1/(t+e+s+i),n=this.x*this.y,o=this.z*this.w,l=this.x*this.z,m=this.y*this.w,u=this.y*this.z,y=this.x*this.w;return E.fromRowMajor((t-e-s+i)*r,2*(n-o)*r,2*(l+m)*r,0,2*(n+o)*r,(-t+e-s+i)*r,2*(u-y)*r,0,2*(l-m)*r,2*(u+y)*r,-t-e+s+i,0,0,0,0,1)}};let C=A;C.IDENTITY=new A;const d=class{static multiply(i,t){const e=new d;e.mat[0]=0,e.mat[5]=0,e.mat[10]=0,e.mat[15]=0;for(let s=0;s<4;s++)for(let r=0;r<4;r++)for(let n=0;n<4;n++)e.mat[s*4+r]+=i.mat[s*4+n]*t.mat[n*4+r];return e}static copy(i){const t=new d;return t.copy(i),t}static fromRowMajor(i,t,e,s,r,n,o,l,m,u,y,h,w,x,p,M){const B=new d;return B.setRowMajor(i,t,e,s,r,n,o,l,m,u,y,h,w,x,p,M),B}static fromColumnMajor(i,t,e,s,r,n,o,l,m,u,y,h,w,x,p,M){const B=new d;return B.setColumnMajor(i,t,e,s,r,n,o,l,m,u,y,h,w,x,p,M),B}static makeTranslation(i){return d.fromRowMajor(1,0,0,i.x,0,1,0,i.y,0,0,1,i.z,0,0,0,1)}static makeRotationX(i){const t=new d;return t.makeRotationX(i),t}static makeRotationY(i){const t=new d;return t.makeRotationY(i),t}static makeRotationZ(i){const t=new d;return t.makeRotationZ(i),t}static makeRotation(i,t){const e=new d;return e.makeRotation(i,t),e}static makeScale(i){const t=new d;return t.makeScale(i),t}static makeTransform(i=a.ZERO,t=C.IDENTITY,e=a.UP){const s=new d;return s.makeTransform(i,t,e),s}static lookAt(i,t,e){const s=new d;return s.lookAt(i,t,e),s}static makePerspective(i,t,e,s){const r=e*Math.tan(i*Math.PI/360),n=r*t;return d.makeFrustum(-n,n,-r,r,e,s)}static makeFrustum(i,t,e,s,r,n){return d.fromRowMajor(2*r/(t-i),0,(t+i)/(t-i),0,0,2*r/(s-e),(s+e)/(s-e),0,0,0,-(n+r)/(n-r),-2*n*r/(n-r),0,0,-1,0)}constructor(){this.mat=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}setColumnMajor(i,t,e,s,r,n,o,l,m,u,y,h,w,x,p,M){this.mat[0]=i,this.mat[1]=t,this.mat[2]=e,this.mat[3]=s,this.mat[4]=r,this.mat[5]=n,this.mat[6]=o,this.mat[7]=l,this.mat[8]=m,this.mat[9]=u,this.mat[10]=y,this.mat[11]=h,this.mat[12]=w,this.mat[13]=x,this.mat[14]=p,this.mat[15]=M}setRowMajor(i,t,e,s,r,n,o,l,m,u,y,h,w,x,p,M){this.mat[0]=i,this.mat[1]=r,this.mat[2]=m,this.mat[3]=w,this.mat[4]=t,this.mat[5]=n,this.mat[6]=u,this.mat[7]=x,this.mat[8]=e,this.mat[9]=o,this.mat[10]=y,this.mat[11]=p,this.mat[12]=s,this.mat[13]=l,this.mat[14]=h,this.mat[15]=M}copy(i){for(let t=0;t<16;t++)this.mat[t]=i.mat[t]}element(i,t){return this.mat[t*4+i]}set(i,t,e){this.mat[e*4+t]=i}multiply(i){const t=d.multiply(i,this);this.copy(t)}makeTranslation(i){this.setRowMajor(1,0,0,i.x,0,1,0,i.y,0,0,1,i.z,0,0,0,1)}makeRotationX(i){const t=Math.cos(i),e=Math.sin(i);this.setRowMajor(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1)}makeRotationY(i){const t=Math.cos(i),e=Math.sin(i);this.setRowMajor(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1)}makeRotationZ(i){const t=Math.cos(i),e=Math.sin(i);this.setRowMajor(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1)}makeRotation(i,t){const e=Math.cos(t),s=Math.sin(t),r=1-e,n=i.x,o=i.y,l=i.z,m=r*n,u=r*o;this.setRowMajor(m*n+e,m*o-s*l,m*l+s*o,0,m*o+s*l,u*o+e,u*l-s*n,0,m*l-s*o,u*l+s*n,r*l*l+e,0,0,0,0,1)}makeScale(i){this.setRowMajor(i.x,0,0,0,0,i.y,0,0,0,0,i.z,0,0,0,0,1)}makePerspective(i,t,e,s){const r=e*Math.tan(i*Math.PI/360),n=r*t;this.makeFrustum(-n,n,-r,r,e,s)}makeFrustum(i,t,e,s,r,n){this.setRowMajor(2*r/(t-i),0,(t+i)/(t-i),0,0,2*r/(s-e),(s+e)/(s-e),0,0,0,-(n+r)/(n-r),-2*n*r/(n-r),0,0,-1,0)}makeTransform(i=a.ZERO,t=C.IDENTITY,e=a.ONE){this.makeTranslation(i),this.multiply(t.getMatrix()),this.multiply(d.makeScale(e))}lookAt(i,t,e=a.UP){const s=a.subtract(i,t);s.normalize();const r=a.cross(e,s);r.normalize();const n=a.cross(s,r),o=d.fromRowMajor(r.x,n.x,s.x,0,r.y,n.y,s.y,0,r.z,n.z,s.z,0,0,0,0,1),l=d.makeTranslation(i);this.copy(d.multiply(o,l))}multiplyScalar(i){for(let t=0;t<16;t++)this.mat[t]*=i}determinant(){return this.mat[3]*this.mat[6]*this.mat[9]*this.mat[12]-this.mat[2]*this.mat[7]*this.mat[9]*this.mat[12]-this.mat[3]*this.mat[5]*this.mat[10]*this.mat[12]+this.mat[1]*this.mat[7]*this.mat[10]*this.mat[12]+this.mat[2]*this.mat[5]*this.mat[11]*this.mat[12]-this.mat[1]*this.mat[6]*this.mat[11]*this.mat[12]-this.mat[3]*this.mat[6]*this.mat[8]*this.mat[13]+this.mat[2]*this.mat[7]*this.mat[8]*this.mat[13]+this.mat[3]*this.mat[4]*this.mat[10]*this.mat[13]-this.mat[0]*this.mat[7]*this.mat[10]*this.mat[13]-this.mat[2]*this.mat[4]*this.mat[11]*this.mat[13]+this.mat[0]*this.mat[6]*this.mat[11]*this.mat[13]+this.mat[3]*this.mat[5]*this.mat[8]*this.mat[14]-this.mat[1]*this.mat[7]*this.mat[8]*this.mat[14]-this.mat[3]*this.mat[4]*this.mat[9]*this.mat[14]+this.mat[0]*this.mat[7]*this.mat[9]*this.mat[14]+this.mat[1]*this.mat[4]*this.mat[11]*this.mat[14]-this.mat[0]*this.mat[5]*this.mat[11]*this.mat[14]-this.mat[2]*this.mat[5]*this.mat[8]*this.mat[15]+this.mat[1]*this.mat[6]*this.mat[8]*this.mat[15]+this.mat[2]*this.mat[4]*this.mat[9]*this.mat[15]-this.mat[0]*this.mat[6]*this.mat[9]*this.mat[15]-this.mat[1]*this.mat[4]*this.mat[10]*this.mat[15]+this.mat[0]*this.mat[5]*this.mat[10]*this.mat[15]}inverse(){const i=this.determinant();if(Math.abs(i)<1e-8)return new d;const t=new d;return t.mat[0]=(this.mat[6]*this.mat[11]*this.mat[13]-this.mat[7]*this.mat[10]*this.mat[13]+this.mat[7]*this.mat[9]*this.mat[14]-this.mat[5]*this.mat[11]*this.mat[14]-this.mat[6]*this.mat[9]*this.mat[15]+this.mat[5]*this.mat[10]*this.mat[15])/i,t.mat[1]=(this.mat[3]*this.mat[10]*this.mat[13]-this.mat[2]*this.mat[11]*this.mat[13]-this.mat[3]*this.mat[9]*this.mat[14]+this.mat[1]*this.mat[11]*this.mat[14]+this.mat[2]*this.mat[9]*this.mat[15]-this.mat[1]*this.mat[10]*this.mat[15])/i,t.mat[2]=(this.mat[2]*this.mat[7]*this.mat[13]-this.mat[3]*this.mat[6]*this.mat[13]+this.mat[3]*this.mat[5]*this.mat[14]-this.mat[1]*this.mat[7]*this.mat[14]-this.mat[2]*this.mat[5]*this.mat[15]+this.mat[1]*this.mat[6]*this.mat[15])/i,t.mat[3]=(this.mat[3]*this.mat[6]*this.mat[9]-this.mat[2]*this.mat[7]*this.mat[9]-this.mat[3]*this.mat[5]*this.mat[10]+this.mat[1]*this.mat[7]*this.mat[10]+this.mat[2]*this.mat[5]*this.mat[11]-this.mat[1]*this.mat[6]*this.mat[11])/i,t.mat[4]=(this.mat[7]*this.mat[10]*this.mat[12]-this.mat[6]*this.mat[11]*this.mat[12]-this.mat[7]*this.mat[8]*this.mat[14]+this.mat[4]*this.mat[11]*this.mat[14]+this.mat[6]*this.mat[8]*this.mat[15]-this.mat[4]*this.mat[10]*this.mat[15])/i,t.mat[5]=(this.mat[2]*this.mat[11]*this.mat[12]-this.mat[3]*this.mat[10]*this.mat[12]+this.mat[3]*this.mat[8]*this.mat[14]-this.mat[0]*this.mat[11]*this.mat[14]-this.mat[2]*this.mat[8]*this.mat[15]+this.mat[0]*this.mat[10]*this.mat[15])/i,t.mat[6]=(this.mat[3]*this.mat[6]*this.mat[12]-this.mat[2]*this.mat[7]*this.mat[12]-this.mat[3]*this.mat[4]*this.mat[14]+this.mat[0]*this.mat[7]*this.mat[14]+this.mat[2]*this.mat[4]*this.mat[15]-this.mat[0]*this.mat[6]*this.mat[15])/i,t.mat[7]=(this.mat[2]*this.mat[7]*this.mat[8]-this.mat[3]*this.mat[6]*this.mat[8]+this.mat[3]*this.mat[4]*this.mat[10]-this.mat[0]*this.mat[7]*this.mat[10]-this.mat[2]*this.mat[4]*this.mat[11]+this.mat[0]*this.mat[6]*this.mat[11])/i,t.mat[8]=(this.mat[5]*this.mat[11]*this.mat[12]-this.mat[7]*this.mat[9]*this.mat[12]+this.mat[7]*this.mat[8]*this.mat[13]-this.mat[4]*this.mat[11]*this.mat[13]-this.mat[5]*this.mat[8]*this.mat[15]+this.mat[4]*this.mat[9]*this.mat[15])/i,t.mat[9]=(this.mat[3]*this.mat[9]*this.mat[12]-this.mat[1]*this.mat[11]*this.mat[12]-this.mat[3]*this.mat[8]*this.mat[13]+this.mat[0]*this.mat[11]*this.mat[13]+this.mat[1]*this.mat[8]*this.mat[15]-this.mat[0]*this.mat[9]*this.mat[15])/i,t.mat[10]=(this.mat[1]*this.mat[7]*this.mat[12]-this.mat[3]*this.mat[5]*this.mat[12]+this.mat[3]*this.mat[4]*this.mat[13]-this.mat[0]*this.mat[7]*this.mat[13]-this.mat[1]*this.mat[4]*this.mat[15]+this.mat[0]*this.mat[5]*this.mat[15])/i,t.mat[11]=(this.mat[3]*this.mat[5]*this.mat[8]-this.mat[1]*this.mat[7]*this.mat[8]-this.mat[3]*this.mat[4]*this.mat[9]+this.mat[0]*this.mat[7]*this.mat[9]+this.mat[1]*this.mat[4]*this.mat[11]-this.mat[0]*this.mat[5]*this.mat[11])/i,t.mat[12]=(this.mat[6]*this.mat[9]*this.mat[12]-this.mat[5]*this.mat[10]*this.mat[12]-this.mat[6]*this.mat[8]*this.mat[13]+this.mat[4]*this.mat[10]*this.mat[13]+this.mat[5]*this.mat[8]*this.mat[14]-this.mat[4]*this.mat[9]*this.mat[14])/i,t.mat[13]=(this.mat[1]*this.mat[10]*this.mat[12]-this.mat[2]*this.mat[9]*this.mat[12]+this.mat[2]*this.mat[8]*this.mat[13]-this.mat[0]*this.mat[10]*this.mat[13]-this.mat[1]*this.mat[8]*this.mat[14]+this.mat[0]*this.mat[9]*this.mat[14])/i,t.mat[14]=(this.mat[2]*this.mat[5]*this.mat[12]-this.mat[1]*this.mat[6]*this.mat[12]-this.mat[2]*this.mat[4]*this.mat[13]+this.mat[0]*this.mat[6]*this.mat[13]+this.mat[1]*this.mat[4]*this.mat[14]-this.mat[0]*this.mat[5]*this.mat[14])/i,t.mat[15]=(this.mat[1]*this.mat[6]*this.mat[8]-this.mat[2]*this.mat[5]*this.mat[8]+this.mat[2]*this.mat[4]*this.mat[9]-this.mat[0]*this.mat[6]*this.mat[9]-this.mat[1]*this.mat[4]*this.mat[10]+this.mat[0]*this.mat[5]*this.mat[10])/i,t}invert(){const i=this.inverse();this.copy(i)}transpose(){return d.fromRowMajor(this.mat[0],this.mat[1],this.mat[2],this.mat[3],this.mat[4],this.mat[5],this.mat[6],this.mat[7],this.mat[8],this.mat[9],this.mat[10],this.mat[11],this.mat[12],this.mat[13],this.mat[14],this.mat[15])}};let E=d;E.IDENTITY=new d;class v{constructor(){this.children=[],this.position=new a,this.rotation=new C,this.scale=new a(1,1,1),this.visible=!0,this.matrix=new E,this.worldMatrix=new E}draw(t,e,s){!this.visible||this.children.forEach(r=>{r.draw(this,e,s)})}postRender(){this.children.forEach(t=>{t.postRender()})}computeWorldTransform(t){this.matrix.makeTransform(this.position,this.rotation,this.scale),this.worldMatrix.copy(t.worldMatrix),this.worldMatrix.multiply(this.matrix),this.children.forEach(e=>{e.computeWorldTransform(this)})}add(t){this.children.push(t)}remove(t){const e=this.children.indexOf(t);return e==-1?null:this.children.splice(e,1)[0]}setLights(t){this.children.forEach(e=>{e.setLights(t)})}translate(t){this.position.add(this.rotation.rotate(t))}translateX(t){this.position.add(this.rotation.rotate(new a(t,0,0)))}translateY(t){this.position.add(this.rotation.rotate(new a(0,t,0)))}translateZ(t){this.position.add(this.rotation.rotate(new a(0,0,t)))}lookAt(t,e=a.UP){const s=E.lookAt(this.position,t,e);this.rotation.setMatrix(s)}getWorldMatrix(){return this.worldMatrix}getLocalMatrix(){return this.matrix}}class O extends v{constructor(t=60,e=1920/1080,s=.1,r=100){super(),this.projectionMatrix=new E,this.viewMatrix=new E,this.fov=t,this.aspectRatio=e,this.near=s,this.far=r,this.projectionMatrix.makePerspective(t,e,s,r)}getProjectionMatrix(){return this.projectionMatrix}getViewMatrix(){return this.viewMatrix}setPerspectiveCamera(t,e,s,r){this.fov=t,this.aspectRatio=e,this.near=s,this.far=r,this.projectionMatrix.makePerspective(t,e,s,r)}computeWorldTransform(t){super.computeWorldTransform(t),this.viewMatrix=this.worldMatrix.inverse()}getFov(){return this.fov}getAspectRatio(){return this.aspectRatio}getNear(){return this.near}getFar(){return this.far}onMouseDown(t){}onMouseUp(t){}onMouseMove(t){}onMouseWheel(t){}onKeyDown(t){}onKeyUp(t){}}class K{constructor(){this.lights=[],this.lightTypes=[],this.lightPositions=[],this.ambientIntensities=[],this.diffuseIntensities=[],this.specularIntensities=[]}clear(){this.lights=[],this.lightTypes=[],this.lightPositions=[],this.ambientIntensities=[],this.diffuseIntensities=[],this.specularIntensities=[]}addLight(t){this.lights.some(s=>s==t)||this.lights.push(t)}getNumLights(){return this.lights.length}updateLights(){this.lights.forEach(t=>{if(t.visible){const e=new a;e.applyMatrix(t.getWorldMatrix()),this.lightPositions.push(e.x,e.y,e.z),this.lightTypes.push(t.getType()),this.ambientIntensities.push(t.ambientIntensity.r,t.ambientIntensity.g,t.ambientIntensity.b),this.diffuseIntensities.push(t.diffuseIntensity.r,t.diffuseIntensity.g,t.diffuseIntensity.b),this.specularIntensities.push(t.specularIntensity.r,t.specularIntensity.g,t.specularIntensity.b)}else{const e=new a;e.applyMatrix(t.getWorldMatrix()),this.lightPositions.push(e.x,e.y,e.z),this.lightTypes.push(t.getType()),this.ambientIntensities.push(0,0,0),this.diffuseIntensities.push(0,0,0),this.specularIntensities.push(0,0,0)}})}}class G{constructor(){this.root=new v,this.lightManager=new K}draw(t){t.computeWorldTransform(this.root),this.computeWorldTransforms(),this.lightManager.clear(),this.root.setLights(this.lightManager),this.lightManager.updateLights(),this.root.children.forEach(e=>{e.draw(this.root,t,this.lightManager)})}postRender(){this.root.children.forEach(t=>{t.postRender()})}add(t){this.root.add(t)}remove(t){this.root.remove(t)}computeWorldTransforms(){this.root.children.forEach(t=>{t.computeWorldTransform(this.root)})}}class F{static getInstance(){return F.instance}constructor(){F.instance=this,this.time=Date.now(),this.camera=new O,this.scene=new G,this.renderer=new X,this.renderer.resize(window.innerWidth,window.innerHeight,this.camera.getAspectRatio()),window.addEventListener("resize",()=>{this.resize()},!1),window.addEventListener("mousedown",t=>{this.onMouseDownEventHandler(t)}),window.addEventListener("mouseup",t=>{this.onMouseUpEventHandler(t)}),window.addEventListener("mousemove",t=>{this.onMouseMoveEventHandler(t)}),window.addEventListener("wheel",t=>{this.onMouseWheelEventHandler(t)}),window.addEventListener("keydown",t=>{this.onKeyDownEventHandler(t)}),window.addEventListener("keyup",t=>{this.onKeyUpEventHandler(t)})}start(){this.createScene(),this.mainLoop()}mainLoop(){this.update((Date.now()-this.time)/1e3),this.renderer.render(this.scene,this.camera),this.scene.postRender(),window.requestAnimationFrame(()=>this.mainLoop())}resize(){this.renderer.resize(window.innerWidth,window.innerHeight,this.camera.getAspectRatio())}onMouseDown(t){}onMouseUp(t){}onMouseMove(t){}onMouseWheel(t){}onKeyDown(t){}onKeyUp(t){}onMouseDownEventHandler(t){this.camera.onMouseDown(t),this.onMouseDown(t)}onMouseUpEventHandler(t){this.camera.onMouseUp(t),this.onMouseUp(t)}onMouseMoveEventHandler(t){this.camera.onMouseMove(t),this.onMouseMove(t)}onMouseWheelEventHandler(t){this.camera.onMouseWheel(t),this.onMouseWheel(t)}onKeyDownEventHandler(t){this.camera.onKeyDown(t),this.onKeyDown(t)}onKeyUpEventHandler(t){this.camera.onKeyUp(t),this.onKeyUp(t)}}class Z extends O{constructor(t=1,e=60,s=1920/1080,r=.1,n=100){super(e,s,r,n),this.mouseDrag=!1,this.cameraOrbitX=new C,this.cameraOrbitY=new C,this.cameraDistance=t,this.updateCameraOrbit()}onMouseDown(t){t.target.localName=="canvas"&&(this.mouseDrag=!0)}onMouseUp(t){this.mouseDrag=!1}onMouseMove(t){this.mouseDrag&&(this.cameraOrbitX.multiply(C.makeRotationX(-t.movementY*Math.PI/180)),this.cameraOrbitY.multiply(C.makeRotationY(-t.movementX*Math.PI/180)),this.updateCameraOrbit())}onMouseWheel(t){this.cameraDistance+=t.deltaY/1e3,this.updateCameraOrbit()}updateCameraOrbit(){this.rotation.copy(this.cameraOrbitX),this.rotation.multiply(this.cameraOrbitY),this.position.set(0,0,this.cameraDistance),this.position.rotate(this.rotation)}}class ${constructor(t=new a,e=new a(0,0,-1)){this.origin=t,this.direction=e}set(t,e){this.origin=t,this.direction=e}}class Q{constructor(t=new $){this.ray=t}setPickRay(t,e){this.ray.origin.copy(e.position),this.ray.direction.set(t.x,t.y,-1),this.ray.direction.applyMatrix(e.getProjectionMatrix().inverse()),this.ray.direction.applyMatrix(e.getWorldMatrix()),this.ray.direction.subtract(this.ray.origin),this.ray.direction.normalize()}intersectsPlane(t){const e=this.ray.direction.dot(t.normal);if(Math.abs(e)>1e-6){const r=a.subtract(t.point,this.ray.origin).dot(t.normal)/e;if(r>0){const n=a.multiplyScalar(this.ray.direction,r);return n.add(this.ray.origin),n}}return null}intersectsSphere(t){const e=a.subtract(t.center,this.ray.origin),s=e.dot(this.ray.direction),r=t.radius*t.radius,n=e.dot(e)-s*s;if(n>r)return null;const o=Math.sqrt(r-n),l=s-o,m=s+o;if(l<0&&m<0)return null;const u=this.ray.direction.clone();return l<m?u.multiplyScalar(l):u.multiplyScalar(m),u.add(this.ray.origin),u}intersectsBox(t){let e=(t.min.x-this.ray.origin.x)/this.ray.direction.x,s=(t.max.x-this.ray.origin.x)/this.ray.direction.x;if(e>s){const u=e;e=s,s=u}let r=(t.min.y-this.ray.origin.y)/this.ray.direction.y,n=(t.max.y-this.ray.origin.y)/this.ray.direction.y;if(r>n){const u=r;r=n,n=u}if(e>n||r>s)return null;r>e&&(e=r),n<s&&(s=n);let o=(t.min.z-this.ray.origin.z)/this.ray.direction.z,l=(t.max.z-this.ray.origin.z)/this.ray.direction.z;if(o>l){const u=o;o=l,l=u}if(e>l||o>s)return null;o>e&&(e=o),l<s&&(s=l);const m=a.multiplyScalar(this.ray.direction,e);return m.add(this.ray.origin),m}}const U=class{constructor(i=0,t=0,e=0){this.r=i,this.g=t,this.b=e}set(i,t,e){this.r=i,this.g=t,this.b=e}copy(i){this.r=i.r,this.g=i.g,this.b=i.b}};let g=U;g.WHITE=new U(1,1,1);g.BLACK=new U(0,0,0);g.RED=new U(1,0,0);g.GREEN=new U(0,1,0);g.BLUE=new U(0,0,1);g.YELLOW=new U(1,1,0);g.PURPLE=new U(1,0,1);g.CYAN=new U(0,1,1);class J{constructor(t=new a,e=new a(0,0,-1)){this.point=t,this.normal=e}}var q=`#version 300 es

precision mediump float;

#define POINT_LIGHT 0
#define DIRECTIONAL_LIGHT 1

const int MAX_LIGHTS = 16;

uniform mat4 modelMatrix;
uniform mat4 viewMatrix;
uniform mat4 projectionMatrix;
uniform mat4 normalMatrix;
uniform vec3 eyePosition;

uniform int numLights;
uniform int lightTypes[MAX_LIGHTS];
uniform vec3 lightPositions[MAX_LIGHTS];
uniform vec3 ambientIntensities[MAX_LIGHTS];
uniform vec3 diffuseIntensities[MAX_LIGHTS];
uniform vec3 specularIntensities[MAX_LIGHTS];

uniform vec3 kAmbient;
uniform vec3 kDiffuse;
uniform vec3 kSpecular;
uniform float shininess;

in vec3 position;
in vec3 normal;
in vec4 color;
in vec2 texCoord;

out vec4 vertColor;
out vec2 uv;

void main() 
{
    
    vec3 worldPosition = (modelMatrix * vec4(position, 1)).xyz;

    vec3 illumination = vec3(0, 0, 0);
    for(int i=0; i < numLights; i++)
    {
        
        illumination += kAmbient * ambientIntensities[i];
        
        
        vec3 n = normalize((normalMatrix * vec4(normal, 0)).xyz);

        
        vec3 l;
        if(lightTypes[i] == DIRECTIONAL_LIGHT)
            l = normalize(lightPositions[i]);
        else
            l = normalize(lightPositions[i] - worldPosition);

        
        float diffuseComponent = max(dot(n, l), 0.0);
        illumination += diffuseComponent * kDiffuse * diffuseIntensities[i];

        
        vec3 e = normalize(eyePosition - worldPosition);

        
        vec3 r = reflect(-l, n);

        
        float specularComponent = pow(max(dot(e, r), 0.0), shininess);
        illumination += specularComponent * kSpecular * specularIntensities[i];
    }

    vertColor = color;
    vertColor.rgb *= illumination;

    uv = texCoord.xy; 

    gl_Position = projectionMatrix * viewMatrix * vec4(worldPosition, 1);
}`,tt=`#version 300 es

precision mediump float;

uniform int useTexture;
uniform sampler2D textureImage;

in vec4 vertColor;
in vec2 uv;

out vec4 fragColor;

void main() 
{
    fragColor = vertColor;

    if(useTexture != 0)
    {
        fragColor *= texture(textureImage, uv);
    }
}`,V=(i=>(i[i.FRONT=0]="FRONT",i[i.BACK=1]="BACK",i[i.DOUBLE=2]="DOUBLE",i))(V||{});class _{constructor(){this.visible=!0,this.side=0,this.gl=F.getInstance().renderer.gl}initialize(){if(this.side==2){this.gl.disable(this.gl.CULL_FACE);return}this.gl.enable(this.gl.CULL_FACE),this.side==0?this.gl.cullFace(this.gl.BACK):this.gl.cullFace(this.gl.FRONT)}}class k{constructor(t,e){this.vertexSource=t,this.fragmentSource=e,this.vertexShader=null,this.fragmentShader=null,this.shaderProgram=null,this.initialized=!1}initialize(t){this.initialized||(this.initialized=!0,this.vertexShader=this.createVertexShader(t,this.vertexSource),this.fragmentShader=this.createFragmentShader(t,this.fragmentSource),this.vertexShader&&this.fragmentShader&&(this.shaderProgram=this.createShaderProgram(t,this.vertexShader,this.fragmentShader)))}createVertexShader(t,e){const s=t.createShader(t.VERTEX_SHADER);return s?(t.shaderSource(s,e),t.compileShader(s),t.getShaderParameter(s,t.COMPILE_STATUS)||(console.error("Error: unable to load vertex shader"),console.error(t.getShaderInfoLog(s)))):console.error("Error: unable to create vertex shader"),s}createFragmentShader(t,e){const s=t.createShader(t.FRAGMENT_SHADER);return s?(t.shaderSource(s,e),t.compileShader(s),t.getShaderParameter(s,t.COMPILE_STATUS)||(console.error("Error: unable to load fragment shader"),console.error(t.getShaderInfoLog(s)))):console.error("Error: unable to create fragment shader"),s}createShaderProgram(t,e,s){let r=null;if(e&&s){if(r=t.createProgram(),!r)return console.error("Error: could not create shader program"),null;if(t.attachShader(r,e),t.attachShader(r,s),t.linkProgram(r),!t.getProgramParameter(r,t.LINK_STATUS))return console.error("Error: could not link shader program"),console.error(t.getProgramInfoLog(r)),null}return r}getProgram(){return this.shaderProgram}getAttribute(t,e){return this.shaderProgram?t.getAttribLocation(this.shaderProgram,e):-1}getUniform(t,e){return this.shaderProgram?t.getUniformLocation(this.shaderProgram,e):null}}const f=class extends _{constructor(){super(),this.texture=null,this.ambientColor=new g(1,1,1),this.diffuseColor=new g(1,1,1),this.specularColor=new g(0,0,0),this.shininess=30,f.shader.initialize(this.gl),this.kAmbientUniform=f.shader.getUniform(this.gl,"kAmbient"),this.kDiffuseUniform=f.shader.getUniform(this.gl,"kDiffuse"),this.kSpecularUniform=f.shader.getUniform(this.gl,"kSpecular"),this.shininessUniform=f.shader.getUniform(this.gl,"shininess"),this.textureUniform=f.shader.getUniform(this.gl,"textureImage"),this.useTextureUniform=f.shader.getUniform(this.gl,"useTexture"),this.eyePositionUniform=f.shader.getUniform(this.gl,"eyePosition"),this.viewUniform=f.shader.getUniform(this.gl,"viewMatrix"),this.modelUniform=f.shader.getUniform(this.gl,"modelMatrix"),this.projectionUniform=f.shader.getUniform(this.gl,"projectionMatrix"),this.normalUniform=f.shader.getUniform(this.gl,"normalMatrix"),this.numLightsUniform=f.shader.getUniform(this.gl,"numLights"),this.lightTypesUniform=f.shader.getUniform(this.gl,"lightTypes"),this.lightPositionsUniform=f.shader.getUniform(this.gl,"lightPositions"),this.ambientIntensitiesUniform=f.shader.getUniform(this.gl,"ambientIntensities"),this.diffuseIntensitiesUniform=f.shader.getUniform(this.gl,"diffuseIntensities"),this.specularIntensitiesUniform=f.shader.getUniform(this.gl,"specularIntensities"),this.positionAttribute=f.shader.getAttribute(this.gl,"position"),this.normalAttribute=f.shader.getAttribute(this.gl,"normal"),this.colorAttribute=f.shader.getAttribute(this.gl,"color"),this.texCoordAttribute=f.shader.getAttribute(this.gl,"texCoord")}draw(i,t,e,s){if(!this.visible||i.triangleCount==0)return;this.initialize(),this.gl.useProgram(f.shader.getProgram());const r=new a;r.applyMatrix(e.getWorldMatrix()),this.gl.uniform3f(this.eyePositionUniform,r.x,r.y,r.z),this.gl.uniformMatrix4fv(this.modelUniform,!1,t.getWorldMatrix().mat),this.gl.uniformMatrix4fv(this.viewUniform,!1,e.getViewMatrix().mat),this.gl.uniformMatrix4fv(this.projectionUniform,!1,e.getProjectionMatrix().mat),this.gl.uniformMatrix4fv(this.normalUniform,!1,t.getWorldMatrix().inverse().transpose().mat),this.gl.uniform3f(this.kAmbientUniform,this.ambientColor.r,this.ambientColor.g,this.ambientColor.b),this.gl.uniform3f(this.kDiffuseUniform,this.diffuseColor.r,this.diffuseColor.g,this.diffuseColor.b),this.gl.uniform3f(this.kSpecularUniform,this.specularColor.r,this.specularColor.g,this.specularColor.b),this.gl.uniform1f(this.shininessUniform,this.shininess),this.gl.uniform1i(this.numLightsUniform,s.getNumLights()),this.gl.uniform1iv(this.lightTypesUniform,s.lightTypes),this.gl.uniform3fv(this.lightPositionsUniform,s.lightPositions),this.gl.uniform3fv(this.ambientIntensitiesUniform,s.ambientIntensities),this.gl.uniform3fv(this.diffuseIntensitiesUniform,s.diffuseIntensities),this.gl.uniform3fv(this.specularIntensitiesUniform,s.specularIntensities),this.gl.enableVertexAttribArray(this.positionAttribute),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,i.positionBuffer),this.gl.vertexAttribPointer(this.positionAttribute,3,this.gl.FLOAT,!1,0,0),this.gl.enableVertexAttribArray(this.normalAttribute),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,i.normalBuffer),this.gl.vertexAttribPointer(this.normalAttribute,3,this.gl.FLOAT,!1,0,0),this.gl.enableVertexAttribArray(this.colorAttribute),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,i.colorBuffer),this.gl.vertexAttribPointer(this.colorAttribute,4,this.gl.FLOAT,!1,0,0),this.texture?(this.gl.uniform1i(this.useTextureUniform,1),this.gl.activeTexture(this.gl.TEXTURE0+this.texture.id),this.gl.bindTexture(this.gl.TEXTURE_2D,this.texture.texture),this.gl.uniform1i(this.textureUniform,this.texture.id),this.gl.enableVertexAttribArray(this.texCoordAttribute),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,i.texCoordBuffer),this.gl.vertexAttribPointer(this.texCoordAttribute,2,this.gl.FLOAT,!1,0,0)):this.gl.uniform1i(this.useTextureUniform,0),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,i.indexBuffer),this.gl.drawElements(this.gl.TRIANGLES,i.triangleCount*3,this.gl.UNSIGNED_SHORT,0)}};let I=f;I.shader=new k(q,tt);class D extends v{constructor(){super(),this.gl=F.getInstance().renderer.gl,this.positionBuffer=this.gl.createBuffer(),this.normalBuffer=this.gl.createBuffer(),this.colorBuffer=this.gl.createBuffer(),this.indexBuffer=this.gl.createBuffer(),this.texCoordBuffer=this.gl.createBuffer(),this.positionBufferDirty=!1,this.normalBufferDirty=!1,this.colorBufferDirty=!1,this.indexBufferDirty=!1,this.texCoordBufferDirty=!1,this.vertexCount=0,this.triangleCount=0,this.material=new I}draw(t,e,s){!this.visible||(this.material.draw(this,this,e,s),this.children.forEach(r=>{r.draw(this,e,s)}))}postRender(){this.positionBufferDirty=!1,this.normalBufferDirty=!1,this.colorBufferDirty=!1,this.indexBufferDirty=!1,this.children.forEach(t=>{t.postRender()})}setVertices(t){if(t.length>0){if(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.positionBuffer),typeof t[0]=="number")this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(t),this.gl.DYNAMIC_DRAW),this.vertexCount=t.length/3;else{const e=[];t.forEach(s=>{e.push(s.x,s.y,s.z)}),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(e),this.gl.DYNAMIC_DRAW),this.vertexCount=t.length}this.positionBufferDirty=!0}}setNormals(t){if(t.length>0){if(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.normalBuffer),typeof t[0]=="number")this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(t),this.gl.DYNAMIC_DRAW);else{const e=[];t.forEach(s=>{e.push(s.x,s.y,s.z)}),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(e),this.gl.DYNAMIC_DRAW)}this.normalBufferDirty=!0}}setColors(t){if(t.length>0){if(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.colorBuffer),typeof t[0]=="number")this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(t),this.gl.DYNAMIC_DRAW);else{const e=[];t.forEach(s=>{e.push(s.r,s.g,s.b,s.a)}),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(e),this.gl.DYNAMIC_DRAW)}this.colorBufferDirty=!0}}setTextureCoordinates(t){if(t.length>0){if(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.texCoordBuffer),typeof t[0]=="number")this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(t),this.gl.DYNAMIC_DRAW);else{const e=[];t.forEach(s=>{e.push(s.x,s.y)}),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(e),this.gl.DYNAMIC_DRAW)}this.texCoordBufferDirty=!0}}setIndices(t){if(t.length>0){if(this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.indexBuffer),typeof t[0]=="number")this.triangleCount=t.length/3,this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(t),this.gl.DYNAMIC_DRAW);else{this.triangleCount=t.length;const e=[];t.forEach(s=>{e.push(s.x,s.y,s.z)}),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(e),this.gl.DYNAMIC_DRAW)}this.indexBufferDirty=!0}}setArrayBuffer(t,e){if(t.length>0)if(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,e),typeof t[0]=="number")this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(t),this.gl.DYNAMIC_DRAW);else{const s=[];t.forEach(r=>{s.push(r.x,r.y,r.z)}),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(s),this.gl.DYNAMIC_DRAW)}}getVertices(){const t=new Float32Array(this.vertexCount*3);return this.gl.bindBuffer(this.gl.COPY_READ_BUFFER,this.positionBuffer),this.gl.getBufferSubData(this.gl.COPY_READ_BUFFER,0,t),[...t]}getNormals(){const t=new Float32Array(this.vertexCount*3);return this.gl.bindBuffer(this.gl.COPY_READ_BUFFER,this.normalBuffer),this.gl.getBufferSubData(this.gl.COPY_READ_BUFFER,0,t),[...t]}getColors(){const t=new Float32Array(this.vertexCount*4);return this.gl.bindBuffer(this.gl.COPY_READ_BUFFER,this.colorBuffer),this.gl.getBufferSubData(this.gl.COPY_READ_BUFFER,0,t),[...t]}getTextureCoordinates(){const t=new Float32Array(this.vertexCount*2);return this.gl.bindBuffer(this.gl.COPY_READ_BUFFER,this.texCoordBuffer),this.gl.getBufferSubData(this.gl.COPY_READ_BUFFER,0,t),[...t]}getIndices(){const t=new Uint16Array(this.triangleCount*3);return this.gl.bindBuffer(this.gl.COPY_READ_BUFFER,this.indexBuffer),this.gl.getBufferSubData(this.gl.COPY_READ_BUFFER,0,t),[...t]}getArrayBuffer(t){const e=new Float32Array(this.vertexCount*3);return this.gl.bindBuffer(this.gl.COPY_READ_BUFFER,t),this.gl.getBufferSubData(this.gl.COPY_READ_BUFFER,0,e),[...e]}createDefaultVertexColors(){const t=[];for(let e=0;e<this.vertexCount;e++)t.push(1,1,1,1);this.setColors(t)}}class it extends D{constructor(t=1,e=1,s=1){super(),this.width=t,this.height=e,this.depth=s,this.createVertices(this.width,this.height,this.depth),this.createNormals(),this.createTextureCoords(),this.createIndices(),this.createDefaultVertexColors()}createVertices(t,e,s){const r=[];r.push(-t/2,-e/2,s/2),r.push(t/2,-e/2,s/2),r.push(t/2,e/2,s/2),r.push(-t/2,e/2,s/2),r.push(-t/2,-e/2,-s/2),r.push(t/2,-e/2,-s/2),r.push(t/2,e/2,-s/2),r.push(-t/2,e/2,-s/2),r.push(-t/2,-e/2,-s/2),r.push(-t/2,-e/2,s/2),r.push(-t/2,e/2,s/2),r.push(-t/2,e/2,-s/2),r.push(t/2,-e/2,-s/2),r.push(t/2,-e/2,s/2),r.push(t/2,e/2,s/2),r.push(t/2,e/2,-s/2),r.push(-t/2,e/2,s/2),r.push(t/2,e/2,s/2),r.push(t/2,e/2,-s/2),r.push(-t/2,e/2,-s/2),r.push(-t/2,-e/2,s/2),r.push(t/2,-e/2,s/2),r.push(t/2,-e/2,-s/2),r.push(-t/2,-e/2,-s/2),this.setVertices(r)}createNormals(){const t=[];t.push(0,0,1),t.push(0,0,1),t.push(0,0,1),t.push(0,0,1),t.push(0,0,-1),t.push(0,0,-1),t.push(0,0,-1),t.push(0,0,-1),t.push(-1,0,0),t.push(-1,0,0),t.push(-1,0,0),t.push(-1,0,0),t.push(1,0,0),t.push(1,0,0),t.push(1,0,0),t.push(1,0,0),t.push(0,1,0),t.push(0,1,0),t.push(0,1,0),t.push(0,1,0),t.push(0,-1,0),t.push(0,-1,0),t.push(0,-1,0),t.push(0,-1,0),this.setNormals(t)}createIndices(){const t=[];t.push(0,1,2),t.push(2,3,0),t.push(4,6,5),t.push(6,4,7),t.push(8,9,10),t.push(10,11,8),t.push(12,14,13),t.push(14,12,15),t.push(16,17,18),t.push(18,19,16),t.push(20,22,21),t.push(22,20,23),this.setIndices(t)}createTextureCoords(){const t=[];t.push(0,1),t.push(1,1),t.push(1,0),t.push(0,0),t.push(1,1),t.push(0,1),t.push(0,0),t.push(1,0),t.push(0,1),t.push(1,1),t.push(1,0),t.push(0,0),t.push(1,1),t.push(0,1),t.push(0,0),t.push(1,0),t.push(0,1),t.push(1,1),t.push(1,0),t.push(0,0),t.push(1,1),t.push(0,1),t.push(0,0),t.push(1,0),this.setTextureCoordinates(t)}}class Y extends D{constructor(t=1,e=3){super(),this.radius=t,this.subdivisions=e,this.createSphere(this.radius,this.subdivisions)}createSphere(t,e){let s=[],r=[];const n=[],o=[],l=(1+Math.sqrt(5))*.5,m=1,u=1/l;s.push(new a(0,u,-m)),s.push(new a(u,m,0)),s.push(new a(-u,m,0)),s.push(new a(0,u,m)),s.push(new a(0,-u,m)),s.push(new a(-m,0,u)),s.push(new a(0,-u,-m)),s.push(new a(m,0,-u)),s.push(new a(m,0,u)),s.push(new a(-m,0,-u)),s.push(new a(u,-m,0)),s.push(new a(-u,-m,0));for(let h=0;h<s.length;h++)s[h].normalize();r.push(2,1,0),r.push(1,2,3),r.push(5,4,3),r.push(4,8,3),r.push(7,6,0),r.push(6,9,0),r.push(11,10,4),r.push(10,11,6),r.push(9,5,2),r.push(5,9,11),r.push(8,7,1),r.push(7,8,10),r.push(2,5,3),r.push(8,1,3),r.push(9,2,0),r.push(1,7,0),r.push(11,9,6),r.push(7,10,6),r.push(5,11,4),r.push(10,8,4);for(let h=0;h<e;h++){const w=[];for(let x=0;x<r.length/3;x++){const p=x*3,M=this.createCentroids(s,r[p],r[p+1],r[p+2]);s.push(...M);const B=this.subdivide(r[p],r[p+1],r[p+2],s.length-3,s.length-2,s.length-1);w.push(...B)}r=w}for(let h=0;h<s.length;h++)s[h].multiplyScalar(t);[s,r]=this.mergeSharedVertices(s,r);for(let h=0;h<s.length;h++){n.push(a.normalize(s[h]));const w=1-(s[h].y+t)/(2*t),x=new a(s[h].x,0,s[h].z);x.normalize();let p=Math.acos(a.FORWARD.dot(x));x.x>0&&(p=Math.PI*2-p);const M=p/(Math.PI*2);o.push(M,w)}const y=r.length;for(let h=0;h<y;h+=3)this.isSeamVertex(h,s,r)?this.isEndVertex(h+1,s,r)&&this.isEndVertex(h+2,s,r)?(s.push(a.copy(s[r[h]])),n.push(a.normalize(s[r[h]])),o.push(1,o[r[h]*2+1]),r[h]=s.length-1):this.isEndVertex(h+1,s,r)?(s.push(a.copy(s[r[h]])),n.push(a.normalize(s[r[h]])),o.push(1,o[r[h]*2+1]),s.push(a.copy(s[r[h+2]])),n.push(a.normalize(s[r[h+2]])),o.push(1,o[r[h+2]*2+1]),r[h]=s.length-2,r[h+2]=s.length-1):this.isEndVertex(h+2,s,r)&&(s.push(a.copy(s[r[h]])),n.push(a.normalize(s[r[h]])),o.push(1,o[r[h]*2+1]),s.push(a.copy(s[r[h+1]])),n.push(a.normalize(s[r[h+1]])),o.push(1,o[r[h+1]*2+1]),r[h]=s.length-2,r[h+1]=s.length-1):this.isSeamVertex(h+1,s,r)?this.isEndVertex(h,s,r)&&this.isEndVertex(h+2,s,r)?(s.push(a.copy(s[r[h+1]])),n.push(a.normalize(s[r[h+1]])),o.push(1,o[r[h+1]*2+1]),r[h+1]=s.length-1):this.isEndVertex(h,s,r)?(s.push(a.copy(s[r[h+1]])),n.push(a.normalize(s[r[h+1]])),o.push(1,o[r[h+1]*2+1]),s.push(a.copy(s[r[h+2]])),n.push(a.normalize(s[r[h+2]])),o.push(1,o[r[h+2]*2+1]),r[h+1]=s.length-2,r[h+2]=s.length-1):this.isEndVertex(h+2,s,r)&&(s.push(a.copy(s[r[h]])),n.push(a.normalize(s[r[h]])),o.push(1,o[r[h]*2+1]),s.push(a.copy(s[r[h+1]])),n.push(a.normalize(s[r[h+1]])),o.push(1,o[r[h+1]*2+1]),r[h]=s.length-2,r[h+1]=s.length-1):this.isSeamVertex(h+2,s,r)&&(this.isEndVertex(h,s,r)&&this.isEndVertex(h+1,s,r)?(s.push(a.copy(s[r[h+2]])),n.push(a.normalize(s[r[h+2]])),o.push(1,o[r[h+2]*2+1]),r[h+2]=s.length-1):this.isEndVertex(h,s,r)?(s.push(a.copy(s[r[h+1]])),n.push(a.normalize(s[r[h+1]])),o.push(1,o[r[h+1]*2+1]),s.push(a.copy(s[r[h+2]])),n.push(a.normalize(s[r[h+2]])),o.push(1,o[r[h+2]*2+1]),r[h+1]=s.length-2,r[h+2]=s.length-1):this.isEndVertex(h+1,s,r)&&(s.push(a.copy(s[r[h]])),n.push(a.normalize(s[r[h]])),o.push(1,o[r[h]*2+1]),s.push(a.copy(s[r[h+2]])),n.push(a.normalize(s[r[h+2]])),o.push(1,o[r[h+2]*2+1]),r[h]=s.length-2,r[h+2]=s.length-1));this.setVertices(s),this.setNormals(n),this.setTextureCoordinates(o),this.setIndices(r),this.createDefaultVertexColors()}isEndVertex(t,e,s){return e[s[t]].x>0}isSeamVertex(t,e,s){return e[s[t]].x==0&&e[s[t]].z<=0}createCentroids(t,e,s,r){const n=[],o=a.add(t[e],t[s]);o.divideScalar(2),o.normalize(),n.push(o);const l=a.add(t[s],t[r]);l.divideScalar(2),l.normalize(),n.push(l);const m=a.add(t[r],t[e]);return m.divideScalar(2),m.normalize(),n.push(m),n}subdivide(t,e,s,r,n,o){const l=[];return l.push(t,r,o),l.push(e,n,r),l.push(s,o,n),l.push(r,n,o),l}mergeSharedVertices(t,e){const s=[],r=[];e.forEach(n=>{r.push(n)});for(let n=0;n<t.length;n++){let o=!1;for(let l=0;l<s.length;l++)if(t[n].equals(s[l])){for(let m=0;m<e.length;m++)e[m]==n&&(r[m]=l);o=!0}if(!o){s.push(t[n]);for(let l=0;l<e.length;l++)e[l]==n&&(r[l]=s.length-1)}}return[s,r]}}class st extends D{constructor(t=1,e=1){super(),this.width=t,this.height=e,this.createVertices(this.width,this.height),this.createNormals(),this.createTextureCoords(),this.createIndices(),this.createDefaultVertexColors()}createVertices(t,e){const s=[];s.push(-t/2,-e/2,0),s.push(t/2,-e/2,0),s.push(t/2,e/2,0),s.push(-t/2,e/2,0),this.setVertices(s)}createNormals(){const t=[];t.push(0,0,-1),t.push(0,0,-1),t.push(0,0,-1),t.push(0,0,-1),this.setNormals(t)}createIndices(){const t=[];t.push(0,2,1),t.push(2,0,3),this.setIndices(t)}createTextureCoords(){const t=[];t.push(1,1),t.push(0,1),t.push(0,0),t.push(1,0),this.setTextureCoordinates(t)}}var L=(i=>(i[i.POINT=0]="POINT",i[i.DIRECTIONAL=1]="DIRECTIONAL",i))(L||{});class W extends v{constructor(t=0,e=new g,s=new g,r=new g){super(),this.type=t,this.ambientIntensity=e,this.diffuseIntensity=s,this.specularIntensity=r}getType(){return this.type}setLights(t){t.addLight(this),super.setLights(t)}}class et extends W{constructor(t=new g(.5,.5,.5)){super(L.POINT,t,new g(0,0,0),new g(0,0,0))}}class rt extends W{constructor(t=new g(.5,.5,.5)){super(L.DIRECTIONAL,new g(0,0,0),t,t)}}var nt=`#version 300 es

precision mediump float;

uniform mat4 modelViewMatrix;
uniform mat4 projectionMatrix;

in vec3 position;

void main() 
{
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1);
}`,ht=`#version 300 es

precision mediump float;

uniform vec4 color;

out vec4 fragColor;

void main() 
{
    fragColor = color;
}`;const T=class extends _{constructor(){super(),this.color=new b(1,1,1,1),this.wireframeBuffers=new Map,T.shader.initialize(this.gl),this.positionAttribute=T.shader.getAttribute(this.gl,"position"),this.modelViewUniform=T.shader.getUniform(this.gl,"modelViewMatrix"),this.projectionUniform=T.shader.getUniform(this.gl,"projectionMatrix"),this.colorUniform=T.shader.getUniform(this.gl,"color")}draw(i,t,e,s){!this.visible||i.triangleCount==0||(this.initialize(),this.gl.useProgram(T.shader.getProgram()),this.gl.uniformMatrix4fv(this.modelViewUniform,!1,E.multiply(t.getWorldMatrix(),e.getViewMatrix()).mat),this.gl.uniformMatrix4fv(this.projectionUniform,!1,e.getProjectionMatrix().mat),this.gl.uniform4f(this.colorUniform,this.color.r,this.color.g,this.color.b,this.color.a),this.gl.enableVertexAttribArray(this.positionAttribute),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,i.positionBuffer),this.gl.vertexAttribPointer(this.positionAttribute,3,this.gl.FLOAT,!1,0,0),(!this.wireframeBuffers.get(i)||i.positionBufferDirty)&&this.updateWireframeBuffer(i),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.wireframeBuffers.get(i)),this.gl.drawElements(this.gl.LINES,i.triangleCount*6,this.gl.UNSIGNED_SHORT,0))}updateWireframeBuffer(i){let t;t=this.wireframeBuffers.get(i),t||(t=this.gl.createBuffer(),t&&this.wireframeBuffers.set(i,t));const e=new Uint16Array(i.triangleCount*3);this.gl.bindBuffer(this.gl.COPY_READ_BUFFER,i.indexBuffer),this.gl.getBufferSubData(this.gl.COPY_READ_BUFFER,0,e);const s=[...e],r=[];for(let n=0;n<i.triangleCount;n++)r.push(s[n*3]),r.push(s[n*3+1]),r.push(s[n*3+1]),r.push(s[n*3+2]),r.push(s[n*3+2]),r.push(s[n*3]);this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,t),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(r),this.gl.DYNAMIC_DRAW)}};let at=T;at.shader=new k(nt,ht);var ot=`#version 300 es

precision mediump float;

uniform mat4 modelViewMatrix;
uniform mat4 projectionMatrix;

in vec3 position;
in vec2 texCoord;

out vec2 uv;

void main() 
{
    uv = texCoord.xy;
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1);
}`,lt=`#version 300 es

precision mediump float;

uniform vec3 color;
uniform int useTexture;
uniform sampler2D textureImage;

in vec2 uv;

out vec4 fragColor;

void main() 
{
    fragColor = vec4(color, 1);

    if(useTexture != 0)
    {
        fragColor *= texture(textureImage, uv);
    }
}`;const R=class extends _{constructor(){super(),this.texture=null,this.color=new g(1,1,1),R.shader.initialize(this.gl),this.colorUniform=R.shader.getUniform(this.gl,"color"),this.textureUniform=R.shader.getUniform(this.gl,"textureImage"),this.useTextureUniform=R.shader.getUniform(this.gl,"useTexture"),this.modelViewUniform=R.shader.getUniform(this.gl,"modelViewMatrix"),this.projectionUniform=R.shader.getUniform(this.gl,"projectionMatrix"),this.positionAttribute=R.shader.getAttribute(this.gl,"position"),this.texCoordAttribute=R.shader.getAttribute(this.gl,"texCoord")}draw(i,t,e,s){!this.visible||i.triangleCount==0||(this.initialize(),this.gl.useProgram(R.shader.getProgram()),this.gl.uniformMatrix4fv(this.modelViewUniform,!1,E.multiply(t.getWorldMatrix(),e.getViewMatrix()).mat),this.gl.uniformMatrix4fv(this.projectionUniform,!1,e.getProjectionMatrix().mat),this.gl.uniform3f(this.colorUniform,this.color.r,this.color.g,this.color.b),this.gl.enableVertexAttribArray(this.positionAttribute),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,i.positionBuffer),this.gl.vertexAttribPointer(this.positionAttribute,3,this.gl.FLOAT,!1,0,0),this.texture?(this.gl.uniform1i(this.useTextureUniform,1),this.gl.activeTexture(this.gl.TEXTURE0+this.texture.id),this.gl.bindTexture(this.gl.TEXTURE_2D,this.texture.texture),this.gl.uniform1i(this.textureUniform,this.texture.id),this.gl.enableVertexAttribArray(this.texCoordAttribute),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,i.texCoordBuffer),this.gl.vertexAttribPointer(this.texCoordAttribute,2,this.gl.FLOAT,!1,0,0)):this.gl.uniform1i(this.useTextureUniform,0),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,i.indexBuffer),this.gl.drawElements(this.gl.TRIANGLES,i.triangleCount*3,this.gl.UNSIGNED_SHORT,0))}};let P=R;P.shader=new k(ot,lt);class mt{constructor(t){this.tokens=[],this.line=0,this.token=0;const e=t.split(`
`);for(let s=0;s<e.length;s++)this.tokens.push(e[s].trim().split(/\s+/));for(let s=0;s<this.tokens.length;s++)this.tokens[s].length==1&&this.tokens[s][0]==""&&(this.tokens.splice(s,1),s--)}peek(){return this.tokens[this.line][this.token]}expect(t){return this.peek()==t?(this.readToken(),!0):!1}consumeLine(){this.line++,this.token=0}done(){return this.line>=this.tokens.length}readToken(){const t=this.tokens[this.line][this.token];return this.token++,this.token>=this.tokens[this.line].length&&(this.line++,this.token=0),t}readNumber(){return Number(this.readToken())}readLine(){const t=[];for(let e=this.token;e<this.tokens[this.line].length;e++)t.push(this.tokens[this.line][e]);return this.line++,this.token=0,t}}class S{static load(t,e=null,s=null){return e||(e=new D),fetch(t).then(r=>{if(!r.ok)throw new Error;return r.blob()}).then(r=>{r.text().then(n=>{S.parse(n,e),s&&s(e)})}).catch(()=>{console.error("Unable to download file: "+t)}),e}static parse(t,e){const s=new mt(t),r=[],n=[],o=[],l=[];for(;!s.done();){const m=s.readToken();m=="v"?this.parseVertex(s.readLine(),r,n):m=="vn"?this.parseNormal(s.readLine(),o):m=="f"?this.parseFace(s.readLine(),l):s.consumeLine()}e.setVertices(r),e.setColors(n),e.setNormals(o),e.setIndices(l),n.length==0&&e.createDefaultVertexColors()}static parseVertex(t,e,s){e.push(Number(t[0])),e.push(Number(t[1])),e.push(Number(t[2])),t.length==6&&(s.push(Number(t[3])),s.push(Number(t[4])),s.push(Number(t[5])),s.push(1))}static parseNormal(t,e){e.push(Number(t[0])),e.push(Number(t[1])),e.push(Number(t[2]))}static parseFace(t,e){for(let s=0;s<3;s++){const r=t[s].split("/");e.push(Number(r[0])-1)}}}class ut extends F{constructor(){super(),this.ground=new st(1e3,1e3),this.sky=new Y(500),this.line=new it(.01,.01,100),this.marker=new Y(.1),this.testMesh=S.load("./assets/bunny.obj")}createScene(){this.camera=new Z(3,60,1920/1080,.1,1e3);const t=new et(new g(.5,.5,.5));this.scene.add(t);const e=new rt(new g(.6,.6,.6));e.position.set(10,0,0),this.scene.add(e);const s=new I;s.ambientColor.set(.425,.9,.555),this.ground.material=s,this.ground.position.set(0,-1,0),this.ground.rotation.setEulerAngles(0,Math.PI/2,0),this.scene.add(this.ground);const r=new P;r.side=V.BACK,r.color.set(.529,.807,.921),this.sky.material=r,this.scene.add(this.sky);const n=new I;n.ambientColor.set(0,0,1),n.specularColor.set(1,1,1),this.testMesh.material=n,this.scene.add(this.testMesh);const o=new P;o.color.set(1,0,1),this.line.material=o,this.line.visible=!1,this.scene.add(this.line);const l=new I;l.ambientColor.set(1,0,0),l.diffuseColor.set(1,0,0),this.marker.material=l,this.marker.visible=!1,this.scene.add(this.marker)}update(t){}onMouseDown(t){const e=this.renderer.getNormalizedDeviceCoordinates(t.x,t.y),s=new Q;s.setPickRay(e,this.camera),this.line.visible=!0,this.line.position.copy(s.ray.origin),this.line.lookAt(a.add(s.ray.origin,s.ray.direction)),this.line.translateZ(this.line.depth/-2-1),this.marker.visible=!1;const r=new J(this.ground.position,a.UP),n=s.intersectsPlane(r);if(n){this.marker.position.copy(n),this.marker.visible=!0;return}}}const ct=new ut;ct.start();
